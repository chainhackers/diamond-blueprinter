import Head from 'next/head';
import { useRouter } from 'next/router';
import styles from '@/styles/DiamondPage.module.scss';
import {
  Diamond,
  FacetPopup,
  Facets,
  ResultingInterface,
  Storages,
  SummaryPopup,
} from '@/components';
import { IFacet, IStoragaData } from '@/types';
import { useDiamondContext } from '@/contexts';
import { useQuery } from '@apollo/client';
import { diamondQuery } from '@/queries';
import { fetchSigner } from '@wagmi/core';

import { getContract, getTokenMeta } from '@/chainApi';

export default function Page1() {
  const router = useRouter();
  // console.log(router);
  const { query } = router;

  const { contract } = query;

  const storages: IStoragaData[] = [
    {
      logo: 'ðŸ“¦',
      name: 'Smashcraft.Backpack.Storage',
      description: 'ðŸ’  Simple(Movement)',
    },
    {
      logo: 'ðŸ§­',
      name: 'Smashcraft.Worldmap.Storage',
      // description: 'ðŸ’  Simple(Movement)',
    },
    {
      logo: 'ðŸ“¦',
      name: 'Smashcraft.CraftReceipt.Storage',
      description: 'ðŸ’  Simple(Movement)',
    },
  ];

  // const facet: IFacet = {
  //   name: 'MinecraftLike',
  //   address: '0x1215991085d541A586F0e1968355A36E58C9b2b4',
  //   methods: [
  //     { name: 'method1', color: 'red' },
  //     { name: 'method2', color: 'green' },
  //     { name: 'method3', color: 'black' },
  //     { name: 'method4', color: 'blue' },
  //     { name: 'method5', color: 'orange' },
  //     { name: 'method6', color: 'pink' },
  //   ],
  //   storages: [
  //     {
  //       logo: 'ðŸ“¦',
  //       name: 'Smashcraft.Backpack.Storage',
  //       // description: 'ðŸ’  Simple(Movement)',
  //     },
  //     {
  //       logo: 'ðŸ§­',
  //       name: 'Smashcraft.Worldmap.Storage',
  //       // description: 'ðŸ’  Simple(Movement)',
  //     },
  //     {
  //       logo: 'ðŸ“¦',
  //       name: 'Smashcraft.CraftReceipt.Storage',
  //       // description: 'ðŸ’  Simple(Movement)',
  //     },
  //   ],
  // };

  const { isPopupShown, isSummaryPopupShown } = useDiamondContext();

  const { data, error, loading } = useQuery(diamondQuery);

  console.log(data);


  const getMetaData = async () => {
    const signer = await fetchSigner();

    if (!process.env.NEXT_PUBLIC_POLYGONSCAN_API_KEY) {
      console.error('no polygon api key');
      return;
    }

    if (!signer) {
      console.error('no signer');
      return;
    }

    if (!process.env.NEXT_PUBLIC_REGISTRY_CONTRACT_ADDRESS) {
      console.error('no registry address');
      return;
    }
    const registryContract = await getContract(process.env.NEXT_PUBLIC_REGISTRY_CONTRACT_ADDRESS);

    // console.log(registryContract);

    if (!registryContract) {
      console.log('cant get registry contract');
      return;
    }

    const tokenMetadataUrl = await registryContract.uri(
      '1809251394333065553493296641428888434488289667447919996841623166933928239099',
    );

    // console.log(tokenMetadataUrl);

    getTokenMeta(tokenMetadataUrl);
  };

  getMetaData();

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className={styles.main}>
        {isPopupShown && <FacetPopup />}
        {isSummaryPopupShown && <SummaryPopup />}
        <div className={styles.gridContainer}>
          <Diamond />
          <Storages storages={storages} />
          <Facets />
          <ResultingInterface />
        </div>
      </main>
    </>
  );
}
